LOGGING = {
    "version": 1,
    #Определяет, нужно ли отключить существующие логгеры, определенные по умолчанию
    #Если False, то существующие логгеры не будут отключены. Это полезно, чтобы сохранить встроенные логгеры Django, такие как логгер для ошибок в базе данных или запросов.
    "disable_existing_loggers": False,
    #Формат логгеров
    "formatters": {
        "standard": {
            "format": "%(asctime)s %(levelname)s %(name)s %(message)s"
        }
    },

    #Обрабодчики, Обрабодчик это как мы хотим обрабатывать логгеры
    #ну например мы можем не просто выводить их на экран а сохронять в файл
    #отпровлять по электронной почте и тд
    "handlers": {
        "console": {
            #NOTSET (0) DEBUG (10) INFO (20) WARNING (30) ERROR (40) CRITICAL (50)
            #уровни логирования идут в следующей последовательности (от наименьшего к наибольшему)
            #и мы выбрали тип логгирование INFO и все логги ниже этого уровня
            #не будут выводиться в логги
            'level': "INFO",
            #Класс логгера
            "class": "logging.StreamHandler",
            "formatter": "standard",
            "filters": [],
        }
    },

    #Это настройка динамически создает логгеры для следующих модулей
    # django — основной модуль Django.
    # django.request — обработка HTTP-запросов.
    # django.db.backends — операции с базой данных.
    # django.template — обработка шаблонов.
    # core — мой пользовательский модуль (предположительно часть моего проекта).
    'loggers': {
        logger_name: {
            #логги выводять если у них тип WARNING и више уровня ниже не будут выводиться
            "level": "WARNING",
            #propagate отвечает за передачу сообщение родительским логгерам. например сначало django.db.backends потом передает django.db и потом django
            "propagate": True,
        } for logger_name in (
            "django",
            "django.request",
            "django.db.backends",
            "django.template",
            "core"
        )
    },

    #параметр root отвечает за настройку корневого логгера тоесть он на самом верху эрархий
    'root': {
        "level": "DEBUG",
        "handlers": ['console']
    }

}
